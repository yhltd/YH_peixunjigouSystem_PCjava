<?xml version="1.0" encoding="UTF-8"?>
<p:beans 
	xmlns:p="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.2.xsd 
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
	http://www.springframework.org/schema/tx   
    http://www.springframework.org/schema/tx/spring-tx-3.2.xsd  
	">
	
	<!-- 配置扫描包 -->
	<context:component-scan  base-package="com.yhocn"/>
	
	<!-- 指定数据源信息文件的位置 -->
	<context:property-placeholder location="classpath:db.properties"/>

	<!-- 配置数据源 -->
	<p:bean id="dataSource1" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
		<p:property name="username" value="${jdbc.username}" />
		<p:property name="password" value="${jdbc.password}" />
		<p:property name="url" value="${jdbc.url}" />
		<p:property name="driverClassName" value="${jdbc.driver}" />
	</p:bean>

	<!-- 配置数据源 -->
	<p:bean id="dataSource2" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
		<p:property name="username" value="bds28428944" />
		<p:property name="password" value="07910Lyh" />
		<p:property name="url" value="jdbc:sqlserver://bds28428944.my3w.com;DatabaseName=bds28428944_db" />
		<p:property name="driverClassName" value="com.microsoft.sqlserver.jdbc.SQLServerDriver" />
	</p:bean>

	<!-- 配置动态配置数据源 -->
	<p:bean id ="dynamicDataSource" class= "Bean.DynamicDataSource">
		<!-- 默认使用dataSource1的数据源 -->
		<p:property name ="defaultTargetDataSource" ref="dataSource1"></p:property>
		<p:property name ="targetDataSources">
			<p:map key-type ="java.lang.String">
				<p:entry key= "dataSource1" value-ref="dataSource1"></p:entry>
				<p:entry key= "dataSource2" value-ref="dataSource2"></p:entry>
			</p:map>
		</p:property>
	</p:bean>

	<!-- 配置sqlSessionFactory，需要使用dataSource和mybatis的配置文件 -->
	<p:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<p:property name="dataSource" ref="dynamicDataSource" />
		<p:property name="configLocation" value="classpath:mybatis.xml"/>
		<!-- 如果映射文件与接口类不在一个包中的话，需要下面指定映射文件的路径 -->
        <p:property name="mapperLocations" value="classpath:mapper/*.xml" />
	</p:bean>
	
	<!-- 配置 使用mapper 代理方式：注意mapper文件要与接口文件名称一致 -->
	<p:bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
            <p:property name="basePackage" value="com.yhocn.**.mapper" />
            <p:property name="sqlSessionFactoryBeanName"  value="sqlSessionFactory"/>
            <!-- 是为了自动注入SqlSessionFactory ,ref="sqlSessionFactory 是引用了上面配置的sqlSessionFactoryBean 的id"-->
      </p:bean>
	
	<!-- 配置事务步骤1：配置事务管理器 -->
	<p:bean id="transactionManager" 
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<p:property name="dataSource" ref="dynamicDataSource" />
	</p:bean>
	<!-- 配置事务步骤2：配置支持事务的标签 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	
</p:beans>